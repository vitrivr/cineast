# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master, dev, vbs, lsc ]
  pull_request:
    branches: [ master, dev, vbs, lsc ]

jobs:
  build:

    runs-on: ubuntu-latest

    # Setup Cottontail DB service container
    services:
      cottontail:
        image: vitrivr/cottontaildb:0.13.2
        ports:
          - 1865:1865
        options: -it
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: polypheny
          POSTGRES_PASSWORD: happy-jumping-alpaca
          POSTGRES_USER: polypheny
      polypheny:
        image: silvanheller/polypheny-cottontail
        ports:
          - 20591:20591
          - 13137:13137
          - 8070:8070

    # Start actual job.
    steps:
    - uses: actions/checkout@v2
    - name: nc connection test
      run: nc -zv 127.0.0.1 1865
    - name: add polypheny adapter
      run: curl -X POST localhost:13137/sql -d "@add-postgres-polypheny-payload"
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      # https://github.com/actions/cache/blob/main/examples.md#java---gradle
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: core-jar
      run: ./gradlew cineast-core:shadowJar
    - name: runtime-jar
      run: ./gradlew cineast-runtime:shadowJar
    - name: api-jar
      run: ./gradlew cineast-api:shadowJar
    - name: nc connection test
      run: nc -zv 127.0.0.1 1865
    - name: Test with Gradle
      timeout-minutes: 5
      run: ./gradlew test
    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
