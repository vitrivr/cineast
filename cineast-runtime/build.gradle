plugins {
    id 'application'
}

application {
    getMainClass().set('org.vitrivr.cineast.standalone.Main')
    applicationDefaultJvmArgs = ["-Xms1G", "-Xmx2G"]
}
// Required for shadow
mainClassName = application.mainClass.get()

distributions {
    main {
        contents {
            from('../cineast.json') {
                into 'bin'
            }
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'org.vitrivr.cineast.standalone.Main'
        attributes 'Multi-Release': 'true'
        attributes 'Implementation-Version': '1.xx'
    }
}

shadowJar {
    mergeServiceFiles()
}

/**
 * See build.gradle in cineast-core on why we cannot use implementation
 */
dependencies {

    api project(':cineast-core')

    /** Jetty Servlet support. */
    api group: 'org.eclipse.jetty', name: 'jetty-servlet', version: version_jetty

    /** Airline (CLI parsing) */
    api group: 'com.github.rvesse', name: 'airline', version: version_airline

    /** JLine 3 */
    api group: 'org.jline', name: 'jline', version: version_jline

    /** OpenCSV for simple, yet effective CSV parsing */
    api group: 'com.opencsv', name: 'opencsv', version: version_opencsv


    /** Prometheus */
    api group: 'io.prometheus', name: 'simpleclient', version: version_prometheus
    api group: 'io.prometheus', name: 'simpleclient_hotspot', version: version_prometheus
    api group: 'io.prometheus', name: 'simpleclient_httpserver', version: version_prometheus
    api group: 'io.prometheus', name: 'simpleclient_pushgateway', version: version_prometheus
    api group: 'io.prometheus', name: 'simpleclient_servlet', version: version_prometheus
}
